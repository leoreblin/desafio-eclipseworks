// <auto-generated />
using System;
using DesafioEclipseworks.WebAPI.Infrastructure.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DesafioEclipseworks.WebAPI.Data.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20231202025708_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DesafioEclipseworks.WebAPI.Domain.Entities.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Projects");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("Id")
                        .HasDatabaseName("IDX_PROJECTS_ID");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Id"), new[] { "Name" });

                    b.HasIndex("Name")
                        .HasDatabaseName("IDX_PROJECTS_NAME");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Name"), new[] { "Id" });

                    b.ToTable("Projects", (string)null);
                });

            modelBuilder.Entity("DesafioEclipseworks.WebAPI.Domain.Entities.TaskEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Details")
                        .HasColumnType("nvarchar(100)");

                    b.Property<DateTime>("DueDate")
                        .HasColumnType("datetime");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(100)");

                    b.HasKey("Id")
                        .HasName("PK_Tasks");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("ProjectId");

                    b.HasIndex("Status", "DueDate", "Id")
                        .HasDatabaseName("IDX_TASKS_ID_STATUS_DUEDATE");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Status", "DueDate", "Id"), new[] { "Details", "Title" });

                    b.ToTable("Tasks", (string)null);
                });

            modelBuilder.Entity("DesafioEclipseworks.WebAPI.Domain.Entities.TaskUpdateHistory", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Comment")
                        .HasColumnType("nvarchar(200)");

                    b.Property<Guid>("TaskId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("UpdatedBy")
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("UpdatedDate")
                        .HasColumnType("datetime");

                    b.HasKey("Id")
                        .HasName("PK_TaskUpdateHistory");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("Id")
                        .HasDatabaseName("IDX_TASKUPDATEHISTORY_ID_UPDATEDBY_UPDATEDDATE");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Id"), new[] { "UpdatedDate", "UpdatedBy" });

                    b.HasIndex("TaskId");

                    b.HasIndex("UpdatedBy");

                    b.ToTable("TaskUpdateHistory", (string)null);
                });

            modelBuilder.Entity("DesafioEclipseworks.WebAPI.Domain.Entities.User", b =>
                {
                    b.Property<Guid>("Id")
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newsequentialid()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(50)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.HasKey("Id")
                        .HasName("PK_User");

                    SqlServerKeyBuilderExtensions.IsClustered(b.HasKey("Id"), false);

                    b.HasIndex("Id")
                        .HasDatabaseName("IDX_USER_NAME_ROLE");

                    SqlServerIndexBuilderExtensions.IncludeProperties(b.HasIndex("Id"), new[] { "Name", "Role" });

                    b.ToTable("Users", (string)null);
                });

            modelBuilder.Entity("DesafioEclipseworks.WebAPI.Domain.Entities.TaskEntity", b =>
                {
                    b.HasOne("DesafioEclipseworks.WebAPI.Domain.Entities.Project", null)
                        .WithMany()
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_Tasks_Project");
                });

            modelBuilder.Entity("DesafioEclipseworks.WebAPI.Domain.Entities.TaskUpdateHistory", b =>
                {
                    b.HasOne("DesafioEclipseworks.WebAPI.Domain.Entities.TaskEntity", null)
                        .WithMany()
                        .HasForeignKey("TaskId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TaskUpdateHistory_Task");

                    b.HasOne("DesafioEclipseworks.WebAPI.Domain.Entities.User", null)
                        .WithMany()
                        .HasForeignKey("UpdatedBy")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired()
                        .HasConstraintName("FK_TaskUpdateHistory_User");
                });
#pragma warning restore 612, 618
        }
    }
}
